#!/usr/bin/env sh

# Check the number of arguments
if [[ $# -eq 1 ]]; then
  commitMsg="$1"
  echo "The commit message is '${commitMsg}'"
else
  echo "Usage: $0 \"commit message\""
  exit 1
fi

# Check if you are in a Git repository
if git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
    # Get the current branch name
    branch_name=$(git rev-parse --abbrev-ref HEAD)
    echo "Current branch: $branch_name"

    # Use regex to extrac tte desired part of the branch name
    if [[ $branch_name =~ .*/(PICAP|CLOUDOPS)-[0-9]+ ]]; then
        story="${match[1]}"
        echo "Story: $story"

        # Append [$story] to the end fo the commit message if story is not empty
        if [[ -n $story ]]; then
            echo "Uncomment this after you have validate the story name is getting outputted successfully."
            # commitMsg="$commitMsg [$story]"
        fi
    else
      # Don't do anything special with the story suffix.
      echo "Branch name does not match the story pattern."
    fi
else
    echo "not in a Git repository."
    exit 2
fi

git add .
git commit -m "${commitMsg}"
git push

